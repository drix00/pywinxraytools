#!/usr/bin/env python
""" """

# Script information for the file.
__author__ = "Hendrix Demers (hendrix.demers@mail.mcgill.ca)"
__version__ = ""
__date__ = ""
__copyright__ = "Copyright (c) 2007 Hendrix Demers"
__license__ = ""

# Subversion informations for the file.
__svnRevision__ = "$Revision: 2364 $"
__svnDate__ = "$Date: 2011-05-30 07:15:15 -0400 (Mon, 30 May 2011) $"
__svnId__ = "$Id: XRaySpectrumLine.py 2364 2011-05-30 11:15:15Z hdemers $"

# Standard library modules.
import os.path

# Third party modules.

# Local modules.

# Globals and constants variables.

class XRaySpectrumLine(object):
    """
    Read the results file "XSLine_Emi_wAbsD.txt" generated by winxray program.

    """
    def __init__(self, path=None):
        """
        Constructor.

         path - folder where the file could be found.

        """
        self.path = path
        self.filename = "XSLine_Emi_wAbsD.txt"

        if self.path:
            if os.path.exists(self.path):
                self.readFile(os.path.join(self.path, self.filename))
            else:
                raise ValueError("Path does not exists: " + path)

    def extractData(self, lines):
        self.data = {}

        self.atomicNumbers = []

        self.lines = {}

        # Skip 1 header line.
        for line in lines[1:]:
            values = line.split("\t")

            try:
                atomicNumber = int(values[0])
                _symbol = values[1]
                line = values[2]
                xrayEnergy = float(values[3])
                intensityTotal = float(values[4])
                intensityBremsstrahlung = float(values[5])
                intensityCharacteristic = float(values[6])
                peakToBackgroundRatio = float(values[7])
                fwhm = float(values[8])

                self.data.setdefault(atomicNumber, {})
                self.data[atomicNumber].setdefault(line, {})

                self.data[atomicNumber][line]["xrayEnergy"] = xrayEnergy
                self.data[atomicNumber][line]["intensityTotal"] = intensityTotal
                self.data[atomicNumber][line]["intensityBremsstrahlung"] = intensityBremsstrahlung
                self.data[atomicNumber][line]["intensityCharacteristic"] = intensityCharacteristic
                self.data[atomicNumber][line]["peakToBackgroundRatio"] = peakToBackgroundRatio
                self.data[atomicNumber][line]["fwhm"] = fwhm

                self.atomicNumbers.append(atomicNumber)

                self.lines.setdefault(atomicNumber, []).append(line)
            except ValueError:
                pass

    def readFile(self, filename):
        """
        Read all lines of the file and extract data.

        """
        with open(filename, 'r') as fp:
            lines = fp.readlines()

        self.extractData(lines)

    def getData(self, atomicNumber, xrayLine):
        data = {}

        data["xrayEnergy"] = 0.0
        data["intensityTotal"] = 0.0
        data["intensityBremsstrahlung"] = 0.0
        data["intensityCharacteristic"] = 0.0
        data["peakToBackgroundRatio"] = 0.0
        data["fwhm"] = 0.0

        numberLine = 0
        if atomicNumber in self.data:
            for line in self.data[atomicNumber].keys():
                if xrayLine in line:
                    data['xrayEnergy'] += self.data[atomicNumber][line]['xrayEnergy']
                    data['intensityTotal'] += self.data[atomicNumber][line]['intensityTotal']
                    data['intensityBremsstrahlung'] += self.data[atomicNumber][line]['intensityBremsstrahlung']
                    data['intensityCharacteristic'] += self.data[atomicNumber][line]['intensityCharacteristic']
                    data['peakToBackgroundRatio'] += self.data[atomicNumber][line]['peakToBackgroundRatio']
                    data['fwhm'] += self.data[atomicNumber][line]['fwhm']

                    numberLine += 1

        # Need to calculate the mean value of these quantities.
        if numberLine > 0:
            data['xrayEnergy'] /= numberLine
            data['intensityTotal'] /= numberLine
            data['intensityBremsstrahlung'] /= numberLine
            data['fwhm'] /= numberLine

        return data
